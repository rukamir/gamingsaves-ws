# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/namespace/project

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - deploy

compile:
  stage: build
  script:
    - go get -d -v ./...
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/gamingsaves-ws
  artifacts:
    paths:
      - gamingsaves-ws

deploy_prod:
  stage: deploy
  environment:
    name: production
    url: https://api.gamingsaves.com
  only:
    - master
  script:
    - echo $SSH_KEY > ~/id_rsa
    - ssh -i ~/id_rsa jimmy@$PROD_ADDR rm $CI_PROJECT_DIR/gamingsaves-ws
    - scp -i ~/id_rsa jimmy@$PROD_ADDR $CI_PROJECT_DIR/gamingsaves-ws ./gamingsaves-ws
    - ssh -i ~/id_rsa jimmy@$PROD_ADDR chmod +x $CI_PROJECT_DIR/gamingsaves-ws
    - exit 0
